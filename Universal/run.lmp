# =============================================================================
# =============================================================================
#
# NPT Equilibration of Liquid Box of Water Solution
# Written By: Amro Dodin
#
# =============================================================================
# =============================================================================

# =============================================================================
# Read in Configuration & Parameters
# =============================================================================

# Initialize Parameters
include parameters.lmp
include parse_model.lmp

# Read in Data From init Script
atom_style full
pair_style soft 3.0
bond_style harmonic 
angle_style harmonic
improper_style harmonic
if "${skipEquil}==False" then &
    "read_data ${DATADIR}data.${label}.init" &
else &
    "read_data ${DATADIR}data.${label}.eq nocoeff" &
    "bond_coeff * 0 0" &
    "angle_coeff * 0 0" &
    "improper_coeff * 0 0" 

# Read in Force Field
include ${FFDIR}ff.${label}.lmp
delete_bonds all multi 
neighbor 2.0 bin
neigh_modify delay 0

# =============================================================================
# Set Up Groups
# =============================================================================

group waters type 1:${numWaterTypes}
group cations type $((v_numWaterTypes+1)):$((v_numWaterTypes+v_numCationTypes))
group anions type $((v_numWaterTypes+v_numCationTypes+1)):$((v_numWaterTypes+v_numCationTypes+v_numAnionTypes))
group mobile type 1:$((v_numWaterTypes+v_numCationTypes+v_numAnionTypes))
if "${BC} == electrode" then &
    "group electrodes type $((v_numWaterTypes+v_numCationTypes+v_numAnionTypes+1)):$((v_numWaterTypes+v_numCationTypes+v_numAnionTypes+v_numBCTypes))" &
    "region rbot block EDGE EDGE EDGE EDGE EDGE 0" &
    "region rtop block EDGE EDGE EDGE EDGE 0 EDGE" &
    "group allbot region rbot" &
    "group alltop region rtop" &
    "group bot intersect electrodes allbot" &
    "group top intersect electrodes alltop" 


if "${cationMolecular}==True && ${anionMolecular}==True" then &
    "group molecular union waters cations anions" &
    "group simple empty" &
elif "${cationMolecular}==True && ${anionMolecular}==False" &
    "group molecular union waters cations" &
    "group simple union anions" &
    "set type ${anionType} charge ${qAnion}" &
elif "${cationMolecular}==False && ${anionMolecular}==True" &
    "group molecular union waters anions" &
    "group simple union cations" &
    "set type ${vationType} charge ${qCation}" &
else &
    "group molecular union waters" &
    "group simple union cations anions" &
    "set type ${anionType} charge -${qAnion}" &
    "set type ${cationType} charge ${qCation}" 

# =============================================================================
# Set Up Overall Integration Fixes
# =============================================================================

timestep ${dt}

if "${BC} == wall" then &
    "change_box all boundary p p f" &
    "kspace_modify slab 3.0" &
    "fix wall all wall/lj126 zlo EDGE 0.1 ${ljRAu} 10.0 zhi EDGE 0.1 ${ljRAu} 10.0 units box" &
elif "${BC} == electrode" &
    "change_box all boundary p p f" &
    "kspace_modify slab 3.0" &
    "fix conp bot electrode/conp -$((v_pot/2)) ${eta} couple top $((v_pot/2)) symm on"

variable thermo_spec string "step v_TTarget temp pe density ke"

# Check if no zBias specified
if "${zBias} == False" then &
    "jump SELF zBreak"

variable zBiasCounter string 0

# If zBias specified loop through biases
label zLoop

variable zBiasCounter string $(v_zBiasCounter+1)

variable negative string 1

# Check if ion type is specified & assign ID
if "${zBias} == id" then &
    "next zBias" &
    "variable zBiasId string ${zBias}" &
elif "${zBias} == c" &
    "next zBias" &
    "variable zBiasID string $(count(waters)+v_zBias)" &
elif "${zBias} == a" &
    "next zBias" &
    "variable zBiasID string $(count(waters)+count(cations)+v_zBias)" &
elif "${zBias} == idm" &
    "next zBias" &
    "variable zBiasId string ${zBias}" &
    "variable negative string -1" &
elif "${zBias} == cm" &
    "next zBias" &
    "variable zBiasID string $(count(waters)+v_zBias)" &
    "variable negative string -1" &
elif "${zBias} == am" &
    "next zBias" &
    "variable zBiasID string $(count(waters)+count(cations)+v_zBias)" &
    "variable negative string -1" &
else &
    "print 'ERROR: first zBias specifier must be c/s/id[m].'" &
    "quit 1"

# Assign Equilibrium position & spring constant
next zBias
variable z0 string $(v_zBias*v_negative)
next zBias
variable k string ${zBias}

print "zBias:"
print "ID: ${zBiasID}"
print "z0: ${z0}"
print "k: $k"
# Create Fix & Add to Thermodynamic Output
group zGroup${zBiasCounter} id ${zBiasID}
group zGroup${zBiasCounter} include molecule
fix z${zBiasCounter} zGroup${zBiasCounter} spring tether $k NULL NULL ${z0} 0
compute z${zBiasCounter} zGroup${zBiasCounter} com
variable thermo_spec string "${thermo_spec} c_z${zBiasCounter}[3]"

# Parse Next zBias
next zBias
jump SELF zLoop
    
label zBreak

# =============================================================================
# Set Up Outputs
# =============================================================================

variable TTarget equal ramp(1,$T)

thermo_style custom ${thermo_spec}
compute myTemp mobile temp
thermo_modify temp myTemp
thermo ${thermoEvery}

dump 1 all custom ${atomEvery} ${DATADIR}eq.${label}.lammpstrj id mol type q x y z 

if "${skipEquil}==True" then &
    "jump SELF production"

# =============================================================================
# Run Heating
# =============================================================================

fix rigidNVT molecular rigid/nvt/small molecule temp 1 $T ${gtT} tparam 10 10 3
fix simpleNVT simple nvt temp 1 $T ${gtT} tloop 10 tchain 10

run ${nHeat}


# =============================================================================
# Run Equilibration
# =============================================================================

unfix rigidNVT
unfix simpleNVT
variable TTarget equal $T

fix rigidNVT molecular rigid/nvt/small molecule temp $T $T ${gtT} tparam 10 10 3
fix simpleNVT simple nvt temp $T $T ${gtT} tloop 10 tchain 10

compute cz all chunk/atom bin/1d z center 0.5

run ${nEquil}

write_data ${DATADIR}data.${label}.eq pair ij

# =============================================================================
# Run Production
# =============================================================================

label production



if "${skipProd}==True" then &
    quit

undump 1
reset_timestep 0
dump 1 all custom ${atomEvery} ${DATADIR}prod.${label}.lammpstrj id mol type q x y z 

if "${skipEquil}==True" then &
    "variable TTarget equal $T" &
    "fix rigidNVT molecular rigid/nvt/small molecule temp $T $T ${gtT} tparam 10 10 3" &
    "fix simpleNVT simple nvt temp $T $T ${gtT} tloop 10 tchain 10"

run ${nProd}

write_data ${DATADIR}data.${label}.prod pair ij